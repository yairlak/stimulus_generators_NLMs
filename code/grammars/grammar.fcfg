####################
# PRODUCTION RULES #
####################

 # SVOs

S[GROUP=?e] -> subjNP[NUM=?n, PERS=?p, ANIM=?a] VP[NUM=?n, PERS=?p, ANIM=?a, GROUP=?e]

# subject
subjNP[NUM=?n, PERS=?p, GEN=?g, ANIM=?a] -> subj_PropN[NUM=?n, GEN=?g, PERS=?p, ANIM=?a]
subjNP[NUM=?n, PERS=?p, GEN=?g, ANIM=?a] -> Det subj_N[NUM=?n, GEN=?g, PERS=?p, ANIM=?a]
subjNP[NUM=?n, PERS=?p, GEN=?g, ANIM=?a] -> quantifier_subj[NUM=?n, PERS=?p] subj_N[NUM=?n, GEN=?g, PERS=?p, ANIM=?a]
subjNP[NUM=?n, PERS=?p, GEN=?g, ANIM=?a] -> subj_PRO[NUM=?n, GEN=?g, PERS=?p, ANIM=?a]

# verb
VP[NUM=?n, PERS=?p, ANIM=?a, GROUP=sv] -> verb_Intrans[finite=true, NUM=?n, PERS=?p, ANIM=?a]
VP[NUM=?n, PERS=?p, ANIM=?a, GROUP=svo] -> verb_Trans[finite=true, NUM=?n, PERS=?p, ANIM=?a] objNP

# object
objNP -> obj_PropN
objNP -> Det obj_N
objNP -> quantifier_obj[NUM=?n] obj_N[NUM=?n]
objNP -> obj_PRO[REFL=false]

# BINDING

# Binding (reflexives)
S[GROUP=?e] -> subjNP[NUM=?n, GEN=?g, PERS=?p, ANIM=?a] verb_Trans[finite=true, NUM=?n, PERS=?p, ANIM=?a] objPRO[GROUP=?e, NUM=?n, GEN=?g, PERS=?p, ANIM=?a]
objPRO[GROUP=binding_reflexives, NUM=?n, GEN=?g, PERS=?p, ANIM=?a] -> obj_PRO[NUM=?n, GEN=?g, PERS=?p, ANIM=?a, REFL=true]

# Binding (possessives)
S[GROUP=?e] -> subjNP[NUM=?n, GEN=?g, PERS=?p, ANIM=?a] verb_Trans[finite=true, TENSE=?t, NUM=?n, PERS=?p, ANIM=?a] possObjNP[GROUP=?e]
S[GROUP=?e] -> possSubjNP[GROUP=?e, NUM=?n, GEN=?g, PERS=?p, ANIM=?a] verb_Trans[finite=true, TENSE=?t, NUM=?n, PERS=?p, ANIM=?a] objNP[NUM=?n, GEN=?g, PERS=?p, ANIM=?a]
possSubjNP[GROUP=possessive_subj, NUM=?n, GEN=?g, PERS=?p, ANIM=?a, possNUM=?pn, possGEN=?pg, possPERS=?pp] -> poss_subj[possNUM=?pn, possGEN=?pg, possPERS=?pp] subj_N[NUM=?n, GEN=?g, ANIM=?a, PERS=?p, REL=true]
possObjNP[GROUP=possessive_obj, NUM=?n, GEN=?g, PERS=?p, ANIM=?a, possNUM=?pn, possGEN=?pg, possPERS=?pp] -> poss_obj[possNUM=?pn, possGEN=?pg, possPERS=?pp] obj_N[NUM=?n, GEN=?g, ANIM=?a, PERS=?p, REL=true]

# ASSERTIONS AND QUESTIONS

# Main clause
VPthe[finite=?f, NUM=?n, ANIM=?a, PERS=?p] -> verb_Intrans[finite=?f, NUM=?n, ANIM=?a, PERS=?p]
VPthe[finite=?f, NUM=?n, ANIM=?a, PERS=?p] -> verb_Trans[finite=?f, NUM=?n, ANIM=?a, PERS=?p] Det obj_N

# Sentences of the first type below are already in:
# S[GROUP=main_that_clause] -> Det subj_N[NUM=?n, ANIM=?a] VPthe[finite=true, NUM=?n, PERS=3, ANIM=?a]
S[GROUP=main_whether_clause] -> do_Aux[NUM=?n, PERS=3] Det subj_N[NUM=?n, ANIM=?a] VPthe[finite=false, NUM=?n, ANIM=?a, PERS=3]
S[GROUP=main_subjwho_clause] -> subj_who VPthe[finite=true, NUM=sg, PERS=3]
S[GROUP=main_subjwhich_clause] -> subj_which subj_N[NUM=?n, ANIM=?a] VPthe[finite=true, NUM=?n, PERS=3, ANIM=?a]
S[GROUP=main_objwho_clause] -> obj_who do_Aux[NUM=?n, PERS=3] Det subj_N[NUM=?n, ANIM=?a] verb_Trans[finite=false, ANIM=?a]
S[GROUP=main_objwhich_clause] -> obj_which obj_N do_Aux[NUM=?n, PERS=3] Det subj_N[NUM=?n, ANIM=?a] verb_Trans[finite=false, ANIM=?a]

# Embedded clause
embedVPthe[finite=?f, NUM=?n, ANIM=?a, PERS=?p] -> verb_Intrans[finite=?f, NUM=?n, ANIM=?a, PERS=?p]
embedVPthe[finite=?f, NUM=?n, ANIM=?a, PERS=?p] -> verb_Trans[finite=?f, NUM=?n, ANIM=?a, PERS=?p] Det embedobj_N

S[GROUP=?g] -> Det subj_N[NUM=?n, PERS=?p, ANIM=true] verb_Matrix[finite=true, NUM=?n, PERS=?p, ANIM=true] embedS[GROUP=?g]

embedS[GROUP=embed_that_clause] -> rel_That Det embedsubj_N[NUM=?n, ANIM=?a] embedVPthe[finite=true, NUM=?n, PERS=3, ANIM=?a]
embedS[GROUP=embed_whether_clause] -> rel_Whether Det embedsubj_N[NUM=?n, ANIM=?a] embedVPthe[finite=false, NUM=?n, ANIM=?a, PERS=3]
embedS[GROUP=embed_subjwho_clause] -> subj_who embedVPthe[finite=true, NUM=sg, PERS=3]
embedS[GROUP=embed_subjwhich_clause] -> subj_which embedsubj_N[NUM=?n, ANIM=?a] embedVPthe[finite=true, NUM=?n, PERS=3, ANIM=?a]
embedS[GROUP=embed_objwho_clause] -> obj_who Det subj_N[NUM=?n, ANIM=?a] verb_Trans[finite=true, NUM=?n, PERS=3, ANIM=?a]
embedS[GROUP=embed_objwhich_clause] -> obj_which obj_N Det subj_N[NUM=?n, ANIM=?a] verb_Trans[finite=true, NUM=?n, PERS=3, ANIM=?a]

# LONG-RANGE AGREEMENT

S[GROUP=?e] -> Det subj_N[NUM=?n, ANIM=?a, PERS=?p] embedPP[GROUP=?e] verb_Intrans[TENSE=pres, NUM=?n, ANIM=?a, PERS=?p]
embedPP[GROUP=pp] -> P Det embedsubj_N[GROUP=pp]

# EMBEDDINGS

# object RCs
S[GROUP=?g] -> Det subj_N[NUM=?n, PERS=3, ANIM=true] rel_That Objrel[GROUP=?g] verb_Intrans[finite=true, TENSE=pres, NUM=?n, PERS=3, ANIM=true]
Objrel[GROUP=objrel] -> Det embedsubj_N[NUM=?n, ANIM=true, GROUP=objrel] embedverb_Trans[finite=true, NUM=?n, TENSE=pres, PERS=3]

# subject RCs
S[GROUP=?g] -> Det subj_N[NUM=?n, PERS=3, ANIM=true] rel_That Subjrel[NUM=?n, PERS=3, ANIM=true, GROUP=?g] verb_Intrans[finite=true, TENSE=pres, NUM=?n, PERS=3, ANIM=true]
Subjrel[NUM=?n, PERS=3, ANIM=true, GROUP=subjrel] -> embedverb_Trans[finite=true, NUM=?n, TENSE=pres, PERS=3] Det embedobj_N[ANIM=true, GROUP=subjrel]

#################
# LEXICAL RULES #
#################

Det -> 'the'

poss_subj[NUM=sg, PERS=1, BOUND=TESTFEATUREMATCH] -> 'my'
poss_subj[NUM=pl, PERS=1, BOUND=TESTFEATUREMATCH] -> 'our'
poss_subj[PERS=2, BOUND=TESTFEATUREMATCH] -> 'your'
poss_subj[NUM=sg, GEN=f, PERS=3, BOUND=TESTFEATUREMATCH] -> 'her'
poss_subj[NUM=sg, GEN=m, PERS=3, BOUND=TESTFEATUREMATCH] -> 'his'
poss_subj[NUM=pl, GEN=m, PERS=3, BOUND=TESTFEATUREMATCH] -> 'their'
poss_subj[NUM=pl, GEN=f, PERS=3, BOUND=TESTFEATUREMATCH] -> 'their'

poss_obj[NUM=sg, PERS=1, BOUND=TESTFEATUREMATCH] -> 'my'
poss_obj[NUM=pl, PERS=1, BOUND=TESTFEATUREMATCH] -> 'our'
poss_obj[PERS=2, BOUND=TESTFEATUREMATCH] -> 'your'
poss_obj[NUM=sg, GEN=f, PERS=3, BOUND=TESTFEATUREMATCH] -> 'her'
poss_obj[NUM=sg, GEN=m, PERS=3, BOUND=TESTFEATUREMATCH] -> 'his'
poss_obj[NUM=pl, GEN=m, PERS=3, BOUND=TESTFEATUREMATCH] -> 'their'
poss_obj[NUM=pl, GEN=f, PERS=3, BOUND=TESTFEATUREMATCH] -> 'their'

P -> 'near'
subj_who[ANIM=true] -> 'who'
subj_which -> 'which'
obj_who[ANIM=true] -> 'who'|'whom'
obj_which -> 'which'
rel_That -> 'that'
rel_Whether -> 'whether'

subj_PRO[NUM=sg, PERS=1, ANIM=true]->'I'
subj_PRO[NUM=pl, PERS=2, ANIM=true]->'you'
subj_PRO[NUM=sg, PERS=3, GEN=m, ANIM=true]->'he'
subj_PRO[NUM=sg, PERS=3, GEN=f, ANIM=true]->'she'
subj_PRO[NUM=sg, PERS=3, ANIM=false]->'it'
subj_PRO[NUM=pl, PERS=1, ANIM=true]->'we'
subj_PRO[NUM=pl, PERS=3, ANIM=true]->'they'

obj_PRO[NUM=sg, PERS=1, ANIM=true, REFL=false]->'me'
obj_PRO[PERS=2, ANIM=true, REFL=false]->'you'
obj_PRO[NUM=sg, GEN=m, PERS=3, ANIM=true, REFL=false]->'him'
obj_PRO[NUM=sg, GEN=f, PERS=3, ANIM=true, REFL=false]->'her'
obj_PRO[NUM=sg, GEN=m, PERS=3, ANIM=false, REFL=false]->'it'
obj_PRO[NUM=pl, PERS=1, ANIM=true, REFL=false]->'us'
obj_PRO[NUM=pl, PERS=3, ANIM=true, REFL=false]->'them'

obj_PRO[NUM=sg, PERS=1, ANIM=true, REFL=true]->'myself'
obj_PRO[PERS=2, NUM=sg, ANIM=true, REFL=true]->'yourself'
obj_PRO[PERS=2, NUM=pl, ANIM=true, REFL=true]->'yourselves'
obj_PRO[NUM=sg, GEN=m, PERS=3, ANIM=true, REFL=true]->'himself'
obj_PRO[NUM=sg, GEN=f, PERS=3, ANIM=true, REFL=true]->'herself'
obj_PRO[NUM=sg, GEN=m, PERS=3, ANIM=false, REFL=true]->'itself'
obj_PRO[NUM=pl, PERS=1, ANIM=true, REFL=true]->'ourselves'
obj_PRO[NUM=pl, PERS=3, ANIM=true, REFL=true]->'themselves'

quantifier_subj[NUM=sg] -> 'every'
quantifier_subj[NUM=pl] -> 'all'
quantifier_obj[NUM=sg] -> 'every'
quantifier_obj[NUM=pl] -> 'all'


subj_N[NUM=sg, GEN=f, PERS=3, ANIM=true] -> 'sister'
subj_N[NUM=sg, GEN=m, PERS=3, ANIM=true] -> 'brother'
subj_N[NUM=pl, GEN=f, PERS=3, ANIM=true] -> 'sisters'
subj_N[NUM=pl, GEN=m, PERS=3, ANIM=true] -> 'brothers'
obj_N[NUM=sg, GEN=f, PERS=3, ANIM=true] -> 'sister'
obj_N[NUM=sg, GEN=m, PERS=3, ANIM=true] -> 'brother'
obj_N[NUM=pl, GEN=f, PERS=3, ANIM=true] -> 'sisters'
obj_N[NUM=pl, GEN=m, PERS=3, ANIM=true] -> 'brothers'
embedsubj_N[NUM=sg, GEN=f, PERS=3, ANIM=true] -> 'sister'
embedsubj_N[NUM=sg, GEN=m, PERS=3, ANIM=true] -> 'brother'
embedsubj_N[NUM=pl, GEN=f, PERS=3, ANIM=true] -> 'sisters'
embedsubj_N[NUM=pl, GEN=m, PERS=3, ANIM=true] -> 'brothers'
embedobj_N[NUM=sg, GEN=f, PERS=3, ANIM=true] -> 'sister'
embedobj_N[NUM=sg, GEN=m, PERS=3, ANIM=true] -> 'brother'
embedobj_N[NUM=pl, GEN=f, PERS=3, ANIM=true] -> 'sisters'
embedobj_N[NUM=pl, GEN=m, PERS=3, ANIM=true] -> 'brothers'

subj_PropN[NUM=sg, GEN=f, PERS=3, ANIM=true]-> 'Mary'
subj_PropN[NUM=sg, GEN=m, PERS=3, ANIM=true]-> 'John'
obj_PropN[NUM=sg, GEN=f, PERS=3, ANIM=true]-> 'Mary'
obj_PropN[NUM=sg, GEN=m, PERS=3, ANIM=true]-> 'John'
embedsubj_PropN[NUM=sg, GEN=f, PERS=3, ANIM=true]-> 'Mary'
embedsubj_PropN[NUM=sg, GEN=m, PERS=3, ANIM=true]-> 'John'
embedobj_PropN[NUM=sg, GEN=f, PERS=3, ANIM=true]-> 'Mary'
embedobj_PropN[NUM=sg, GEN=m, PERS=3, ANIM=true]-> 'John'

subj_N[NUM=sg, PERS=3, ANIM=false] -> 'car'
subj_N[NUM=pl, PERS=3, ANIM=false] -> 'cars'
obj_N[NUM=sg, PERS=3, ANIM=false] -> 'car'
obj_N[NUM=pl, PERS=3, ANIM=false] -> 'cars'
embedsubj_N[NUM=sg, PERS=3, ANIM=false] -> 'car'
embedsubj_N[NUM=pl, PERS=3, ANIM=false] -> 'cars'
embedobj_N[NUM=sg, PERS=3, ANIM=false] -> 'car'
embedobj_N[NUM=pl, PERS=3, ANIM=false] -> 'cars'

verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=1, ANIM=true] -> 'smile'
verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=2, ANIM=true] -> 'smile'
verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=3, ANIM=true] -> 'smiles'
verb_Intrans[finite=true, TENSE=pres, NUM=pl, ANIM=true] -> 'smile'
verb_Intrans[finite=true, TENSE=past, ANIM=true] -> 'smiled'
verb_Intrans[finite=true, TENSE=future, ANIM=true] -> 'will smile'

verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=1] -> 'fall'
verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=2] -> 'fall'
verb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=3] -> 'falls'
verb_Intrans[finite=true, TENSE=pres, NUM=pl] -> 'fall'
verb_Intrans[finite=true, TENSE=past] -> 'fell'
verb_Intrans[finite=true, TENSE=future] -> 'will fall'

verb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=1, ANIM=true] -> 'see'
verb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=2, ANIM=true] -> 'see'
verb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=3, ANIM=true] -> 'sees'
verb_Trans[finite=true, TENSE=pres, NUM=pl, ANIM=true] -> 'see'
verb_Trans[finite=true, TENSE=past, ANIM=true] -> 'saw'
verb_Trans[finite=true, TENSE=future, ANIM=true] -> 'will see'
verb_Trans[finite=false, ANIM=true] -> 'see'

embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=1, ANIM=true] -> 'smile'
embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=2, ANIM=true] -> 'smile'
embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=3, ANIM=true] -> 'smiles'
embedverb_Intrans[finite=true, TENSE=pres, NUM=pl, ANIM=true] -> 'smile'
embedverb_Intrans[finite=true, TENSE=past, ANIM=true] -> 'smiled'
embedverb_Intrans[finite=true, TENSE=future, ANIM=true] -> 'will smile'

embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=1] -> 'fall'
embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=2] -> 'fall'
embedverb_Intrans[finite=true, TENSE=pres, NUM=sg, PERS=3] -> 'falls'
embedverb_Intrans[finite=true, TENSE=pres, NUM=pl] -> 'fall'
embedverb_Intrans[finite=true, TENSE=past] -> 'fell'
embedverb_Intrans[finite=true, TENSE=future] -> 'will fall'

embedverb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=1, ANIM=true] -> 'see'
embedverb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=2, ANIM=true] -> 'see'
embedverb_Trans[finite=true, TENSE=pres, NUM=sg, PERS=3, ANIM=true] -> 'sees'
embedverb_Trans[finite=true, TENSE=pres, NUM=pl, ANIM=true] -> 'see'
embedverb_Trans[finite=true, TENSE=past, ANIM=true] -> 'saw'
embedverb_Trans[finite=true, TENSE=future, ANIM=true] -> 'will see'
embedverb_Trans[finite=false, ANIM=true] -> 'see'

verb_Matrix[finite=true, TENSE=pres, NUM=sg, PERS=1, ANIM=true] -> 'know'
verb_Matrix[finite=true, TENSE=pres, NUM=sg, PERS=2, ANIM=true] -> 'know'
verb_Matrix[finite=true, TENSE=pres, NUM=sg, PERS=3, ANIM=true] -> 'knows'
verb_Matrix[finite=true, TENSE=pres, NUM=pl, ANIM=true] -> 'know'
verb_Matrix[finite=true, TENSE=past, ANIM=true] -> 'knew'
verb_Matrix[finite=true, TENSE=future, ANIM=true] -> 'will know'
verb_Matrix[finite=false, ANIM=true] -> 'know'

do_Aux[finite=true, TENSE=pres, NUM=sg, PERS=1] -> 'do'
do_Aux[finite=true, TENSE=pres, NUM=sg, PERS=2] -> 'do'
do_Aux[finite=true, TENSE=pres, NUM=sg, PERS=3] -> 'does'
do_Aux[finite=true, TENSE=pres, NUM=pl] -> 'do'
do_Aux[finite=true, TENSE=past] -> 'did'
do_Aux[finite=true, TENSE=future] -> 'will'
